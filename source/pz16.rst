Практическое занятие №16 Настройка различных механизмов защиты электронной почты в сети предприятия
===================================================================================================

Цель работы:
------------

#. Получить практический опыт применения программно-аппаратных средств обеспечения информационной безопасности телекоммуникационных систем;
#. Получить практический опыт выявления технических каналов утечки информации.

Литература:
-----------

#. Шаньгин, В. Ф. Информационная безопасность и защита информации [Электронный ресурс]: учебное пособие. - Москва: ДМК Пресс, 2014. -  Режим доступа: http://www.iprbookshop.ru/29257, по запросу, стр 595-607;

Подготовка к работе:
--------------------

#. Подготовить бланк отчета;
#. Изучить предложенную литературу.

Основное оборудование:
----------------------

#. Компьютер под управлением ОС Windows Server 2008 R2;
#. Почтовый сервер IredMail;
#. Виртуальная машина с настроенным DNS и DHCP сервером;
#. Виртуальные машины в программе VirtualBox на основе Ubuntu Linux согласно заданию и схеме сети;
#. Модель простой сети и ресурсов простой сети;
#. Пакет GNS3 и комплект виртуальных машин, необходимых для схемы сети;
#. Пакет программ LibreOffice.

Задание:
--------

#. Организовать в рамках предложенной модели защищенный обмен лектронной почтой.

Порядок выполнения работы:
--------------------------

#. Собрать схему малой сети по заданию и обеспечить ее работоспособность. Ввести компоненты модели в предложенный домен;
#. Выполнить установку почтового сервера на ОС Linux. Выполнить подключение почтового сервера к модели сети. Выполнить настройку клиентов для чтения электронной почты с сервера;
#. Выполнить добавление DKIM подписи для домена на почтовом сервере;
#. Выполнить добавление и настройку антиспам фильтра spamassasin на почтовом сервере;
#. Выполнить настройку резервного копирования данных сервера;
#. Составить политику, в которой отразить состав и структуру элементов защиты инфрмации на почтовом сервер с указанием угроз, от которых реализуется защита;
#. Построенную политику свести к читаемой таблице, на основе которой составить задание для администратора.

Содержание отчета:
------------------

#. Цель работы;
#. Содержание действий по выполнению данной работы;
#. Ответы на контрольные вопросы;
#. Вывод.

Контрольные вопросы:
--------------------

#. Что понимают под подписью DKIM?
#. Что понимают под MTA и MDA?
#. На основе каких технологий реализуется фильтрация в программе spamassasin?

Приложение
----------

Настройка Spamassassin выполняется по пунктам:
#. следует открыть стандартный файл правил SpamAssassin командой: nano /etc/spamassassin/local.cf (чтобы активировать правила, следует раскомментировать нужные строки, удалив символ «#»);
#. чтобы добавить заголовки в спам, нужно раскомментировать или добавить строку: rewrite_headerSubject [***** SPAM _SCORE_ *****] (после проведения различных тестов Spamassassin дает оценку каждому сообщению);
#. следующая строка отмечает сообщения как спам, если оценка фильтра превышает значение, указанное в правиле: required_score 3.0, если не указано, что бывает чаще всего, необходимо проставить оценку фильтру 3.0;
#. чтобы использовать для проверки почты теорему Байеса, необходимо раскомментировать или добавить строку: use_bayes 1, bayes_auto_learn 1;
#. после того, как были внесены все вышеперечисленные строки, необходимо сохранить файл сочетанием клавиш «Ctrl+O»;
#. теперь необходимо перезапустить спам – фильтр командой: service spamassassin restart.

Чтобы убедиться в том, что spamassassin работает должным образом, следует проверить лог – файл фильтра:nano /var/log/spamassassin/spamd.log или отправить почту с внешнего сервера и проверить почтовые заголовки.
Злоумышленник (хакер) посылает письмо на почтовый сервер, содержащее в себе СПАМ рассылку, иначе говоря сообщение содержащее вирус. При входе на потовый ящик адресата сообщения во вкладке СПАМ должно появиться«+1» сообщение, которое сразу отметилось пометкой СПАМ и верно настроенный iredmail определили его как СПАМ.

Для тестирования работы модуля можно использовать письмо следующего содержания:XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X. 

Настройка spamassassin
``````````````````````

Теперь нам нужно поменять некоторые настройки в файле /etc/default/spamassassin и удостовериться, что у вас получились следующие значения:
::

   ENABLED=1
   SAHOME="/var/lib/spamassassin/"
   OPTIONS="--create-prefs --max-children 5 --username spamd --helper-home-dir ${SAHOME} -s ${SAHOME}spamd.log"
   PIDFILE="${SAHOME}spamd.pid"

Таким образом мы настроили запуск демона spamd от пользователя spamd, создали его собственный домашний каталог (/var/lib/spamassassin/) и заставили его ввести журнал в файле /var/lib/spamassassin/spamd.log

Теперь нужно задать spamassassin некоторые правила. Настройки по умолчанию вполне подходящие, однако вы можете захотеть слегка подправить их. Давайте отредактируем файл /etc/spamassassin/local.cf и приведём его к следующему виду:
::

   rewrite_header Subject [***** SPAM _SCORE_ *****]
   required_score 2.0
   # Чтобы использовать _SCORE_ нам нужно установить report_safe в 0
   # Если эта опция установлена в 0, у поступающего спама к заголовками будут добавлены
   # записи "X-Spam-", но изменений в тело не вносится.
   report_safe 0
   # Включить систему Бэйс
   use_bayes 1
   use_bayes_rules 1
   # Включить автообучение Бэйс
   bayes_auto_learn 1
   # Включить или выключить проверки сети
   skip_rbl_checks 0
   use_razor2 0
   use_dcc 0
   use_pyzor 0

Здесь мы указали spamassassin стандартные настройки spamd для перезаписи темы письма на [***** SPAM _SCORE_ *****], где _SCORE_ - это количество баллов, назначаемых spamassassin после различных тестов, только если действительное значение баллов выше или равно 2.0. Так, письма с баллами ниже 2 изменены не будут.

Чтобы позволить использование _SCORE_ в директиве rewrite_header, вы должны установить report_safe в 0.


