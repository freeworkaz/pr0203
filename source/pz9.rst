Практическое занятие №9 Тестирования программных межсетевых экранов.
====================================================================

Цель работы:
------------

#. Получить практический опыт применения программно-аппаратных средств обеспечения информационной безопасности телекоммуникационных систем;
#. Получить практический опыт выявления технических каналов утечки информации.

Литература:
-----------

#. Шаньгин, В. Ф. Информационная безопасность и защита информации [Электронный ресурс]: учебное пособие. - Москва: ДМК Пресс, 2014. -  Режим доступа: http://www.iprbookshop.ru/29257, по запросу, стр 435-444;

Подготовка к работе:
--------------------

#. Подготовить бланк отчета;
#. Изучить предложенную литературу.

Основное оборудование:
----------------------

#. Межсетевой экран в составе виртуальной машины pfsense;
#. Коммутаторы второго уровня Dlink или аналогичные;
#. Программы CMD, putty;
#. Схема простой сети и ресурсов простой сети;
#. Программа Libreoffice для составления отчетов.

Задание:
--------

#. Выполнить настройку и тестирование предложенного межсетевого экрана (МЭ).

Порядок выполнения работы:
--------------------------

#. Выбрать модель средней сети согласно индивидуальному заданию, собрать сеть по схеме в GNS3. Протестировать работу компонентов. Настроить работу МЭ в полученной модели сети;
#. Выполнить тестирование предложенного МЭ:
  #. Выполнить создание пользователей, являющихся администраторами;
  #. Выполнить создание пользователей, не являющихся администраторами. Выяснить их права и привилегии. Типы пользовательских четныхзаписей и их привилиегии отразить в отчете;
  #. Выполнить анализ политики МЭ по умолчанию. Составить диаграмму связей (т.н. «майнд -карту»), отражающую применение политик по умолчанию;
#. Выполнить настройку МЭ для фильтрации траффика между портами LAN и WAN на примере протоколов icmp, telnet.
#. Выполнить настройку МЭ для фильтрации траффика между портами DMZ и WAN на примере протоколов icmp, telnet4
#. Выполнить настройку устройства для фильтрации трафика между клиентами и серверами сети на основе белого списка адресов;
#. Выполнить настройку устройства для фильтрации трафика между клиентами и серверами сети на основе черного списка адресов;
#. Выполнить настройку устройства для фильтрации трафика между клиентами и серверами сети на основе списка ACL;
#. Выполнить настройку ведения журналов подключений к межсетевым экранам для каждого из пользователей;
#. Выполнить настройку срока действия и смены пароля каждого пользователя.
#. Выполить настройку резервного копирования настроек МЭ;
#. Реализованные настройки продемонстрировать преподавателю.

Содержание отчета:
------------------

#. Цель работы;
#. Содержание действий по выполнению данной работы;
#. Ответы на контрольные вопросы;
#. Вывод.

Контрольные вопросы:
--------------------

#. Что понимают под системой защиты информации с «полным перекрытием»?
#. Что понимают под мерами компенсирования воздействия угроз?
#. Каким образом на практике оценивается эффективность реализованных мер защиты?

Приложение:
-----------


Фаервол, встроенный в ядро Linux, называется Netfilter, а iptables — утилита для управления этим фаерволом. 
Какие примерно задачи можно решать с помощью Netfilter:

* Разрешать/запрещать входящий трафик на определенные порты по определенным протоколам (IPv4/IPv6, TCP/UDP) с указанных адресов (IP, MAC) или подсетей;
* Все то же самое в отношении исходящего трафика;
* Можно, например, полностью игнорировать все ICMP пакеты;
* Настройка NAT, см пост про установку и настройку OpenVPN;

Рассмотрим основные команды.

Показать все правила:
:: 

# iptables -L -n

Вы можете заметить, что в Netfilter есть какие-то «цепочки» (chains) — как минимум INPUT, OUTPUT и FORWARD. У меня лично на машине есть еще и цепочка DOCKER. На первое время можно думать о первых двух, как обо всем входящем и исходящем трафике соответственно, а об остальных временно забыть. Велика вероятность, что они вообще никогда вам не понадобятся.

Удалить все правила:
:: 

# iptables -F

Изменить политику (поведение по умолчанию) цепочки:
:: 

# iptables -P INPUT DROP
# iptables -P INPUT ACCEPT

Запретить доступ с хоста/подсети:
:: 

# iptables -A INPUT -s 123.45.67.89 -j DROP
# iptables -A INPUT -s 123.45.0.0/16 -j DROP

Также можно использовать доменные имена:
:: 

# iptables -A INPUT -s example.ru -j DROP

Запрет исходящих соединений:
:: 

# iptables -A OUTPUT -d 123.45.67.89 -j DROP

В правилах можно использовать отрицания:
:: 

# iptables -A INPUT ! -s 123.45.67.89 -j DROP

Удаление правила по его номеру в цепочке:
:: 

# iptables -D INPUT 1

Удаление правила на основе того, что оно делает:
:: 

# iptables -D INPUT -s 123.45.67.89 -j DROP

Опция -p указывает на протокол. Можно использовать all, icmp, tcp, udp или номер протокола из /etc/protocols. Флаг --sport указывает порт, с которого был прислан пакет, а --dport указывает порт назначения:
:: 

# iptables -A INPUT -p tcp --sport 80 -j ACCEPT
# iptables -A INPUT -p tcp --dport 80 -j ACCEPT

Вставка (insert) правила в начало цепочки:
:: 

# iptables -I INPUT ...

Или можно указать конкретную позицию:
:: 

# iptables -I INPUT 3 ...

Сохранить правила:
:: 

# iptables-save > /etc/iptables.rules

Восстановить правила:
:: 

# iptables-restore < /etc/iptables.rules